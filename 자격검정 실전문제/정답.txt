데이터 모델링의 이해 1. 1
1. 4
2. 4
3. 2

데이터 모델링의 이해
1. 2
2. 3
3. 2
4. 1
5. 2
6. 4
7. 2
8. 3
9. 1
10. 1
11. 속성
12. 3
13. 3
14. 1
15. 4
16. 3
17. 2
18. 2
19. 3
20. 1, 2, 3, 4
21. 1, 2, 3, 4
22. 1, 3
23. 4

데이터 모델링과 성능
1. 반정규화
2. 1. 3. 4. 2. 6. 5
3. 1
4. 3
5. 1
6. 4
7. 3
8. 파티셔닝

SQL 기본. 1
1. 4
2. 2
3. TCL
4. 1,2
5. DISTINCT
6. WHERE, WHERE 절
7. 4

SQL 기본. 2
1. 3
2. 4
3. 1
4. 2
5. NULLIF
6. 1:0, 2:에러, 3:NULL
7. NVL, NULLIF, COALESCE

SQL 기본. 3
1. 1
2. 4
3. 6
4. 10, 20, 20
5. 645, 15, 6

SQL 기본. 4
1. 
ID
999
100
2. 3
3. 3
5. 
ID	AMT
A	200
A	50
B	300
C	100

SQL 기본. 5
1. 1
2. 3
3. 2, 3
4. ALTER, DROP COLUMN
5. 3, 1
6. ALTER TABLE STADIUM RENAME TO STADIUM_JSC;
7. 4
8. 2
9. 1
10. 1
11. 1, 4

SQL 기본. 6
1. 2, 4
2. 3
3. 트랜젝션(TRANSACTION), 커밋(COMMIT), 롤백(ROLLBACK)
4. 3
32. LCD-TV

SQL 활용. 1
1. 3개
2. ㄱ: INNER JOIN 구매정보 B  ON A.고객번호=B.고객번호
   ㄴ: HAVING COUNT(B.구매번호)>=3
3. 1
4. CROSS JOINT
5. 3, 5, 4
6. LEFT OUTER JOIN
7. 
C1	C2	C1	C2
A	1
B	2	B	2
C	3	C	3
D	4
E	5
8. 4
9.  INTERSECT
10. 5, 3
11. 
COL1	COL2	CNT 
AA	A1	1
AB	A2	1
AC	A3	1
AD	A4	1
12. INTERSECTION
13. A C B D
14. 4
15. 
사원번호(PK)	사원명	입사일자		매니저사원번호(FK)
001		홍길동	2012-01-01	NULL 		
003 		.....	.....		.....	
004 		.....	.....		.....	
005		.....	.....		.....	
16. 1
17. 2
18.  NOT EXISTS, 사번=부양사번
19. 2
20. 4

SQL 활용. 2
1.  2
2.  200
3.  ROLLUP 
4.  
   -  SELECT A. 설비ID, B. 에너지코드, SUM(B. 사용량) AS 사용량합계
     FROM 설비 A INNER JOIN 에너지사용량 B
     ON (A. 설비ID = B. 설비ID)
     GROUP BY CUBE (A. 설비ID, B. 에너지코드)
     ORDER BY A. 설비ID, B. 에너지코드;

   - SELECT A. 설비ID, B. 에너지코드, SUM(B. 사용량) AS 사용량합계
     FROM 설비 A INNER JOIN 에너지사용량 B
     ON (A. 설비ID = B. 설비ID)
     GROUP BY GROUPING SETS( (A. 설비ID), (B. 에너지코드),(A. 설비ID, B. 에너지코드), ())
     ORDER BY A. 설비ID, B. 에너지코드; 
5.  테이블과 같은 결과
6.  3
7.  2,3,6
8.  X
9.  002, 003,  006
10.  비용기반 옵티마이저, COST BASED OPTIMIZER, CBO
11.  3, 4, 2 
12.  3
13.  2
14.  2, 4
15.  1, 2, 3
16.  3
17.  4
=======
데이터 모델링의 이해 1. 1
1. 4
2. 4
3. 2

데이터 모델링의 이해
1. 2
2. 3
3. 2
4. 1
5. 2
6. 4
7. 2
8. 3
9. 1
10. 1
11. 속성
12. 3
13. 3
14. 1
15. 4
16. 3
17. 2
18. 2
19. 3
20. 1, 2, 3, 4
21. 1, 2, 3, 4
22. 1, 3
23. 4

데이터 모델링과 성능
1. 반정규화
2. 1. 3. 4. 2. 6. 5
3. 1
4. 3
5. 1
6. 4
7. 3
8. 파티셔닝

SQL 기본. 1
1. 4
2. 2
3. TCL
4. 1,2
5. DISTINCT
6. WHERE, WHERE 절
7. 4

SQL 기본. 2
1. 3
2. 4
3. 1
4. 2
5. NULLIF
6. 1:0, 2:에러, 3:NULL
7. NVL, NULLIF, COALESCE

SQL 기본. 3
1. 1
2. 4
3. 6
4. 10, 20, 20
5. 645, 15, 6

SQL 기본. 4
1. 
ID
999
100
2. 3
3. 3
5. 
ID	AMT
A	200
A	50
B	300
C	100

SQL 기본. 5
1. 1
2. 3
3. 2, 3
4. ALTER, DROP COLUMN
5. 3, 1
6. ALTER TABLE STADIUM RENAME TO STADIUM_JSC;
7. 4
8. 2
9. 1
10. 1
11. 1, 4

SQL 기본. 6
1. 2, 4
2. 3
3. 트랜젝션(TRANSACTION), 커밋(COMMIT), 롤백(ROLLBACK)
4. 3
32. LCD-TV

SQL 활용. 1
1. 3개
2. ㄱ: INNER JOIN 구매정보 B  ON A.고객번호=B.고객번호
   ㄴ: HAVING COUNT(B.구매번호)>=3
3. 1
4. CROSS JOINT
5. 3, 5, 4
6. LEFT OUTER JOIN
7. 
C1	C2	C1	C2
A	1
B	2	B	2
C	3	C	3
D	4
E	5
8. 4
9.  INTERSECT
10. 5, 3
11. 
COL1	COL2	CNT 
AA	A1	1
AB	A2	1
AC	A3	1
AD	A4	1
12. INTERSECTION
13. A C B D
14. 4
15. 
사원번호(PK)	사원명	입사일자		매니저사원번호(FK)
001		홍길동	2012-01-01	NULL 		
003 		.....	.....		.....	
004 		.....	.....		.....	
005		.....	.....		.....	
16. 1
17. 2
18.  NOT EXISTS, 사번=부양사번
19. 2
20. 4

SQL 활용. 2
1.  2
2.  200
3.  ROLLUP 
4.  
   -  SELECT A. 설비ID, B. 에너지코드, SUM(B. 사용량) AS 사용량합계
     FROM 설비 A INNER JOIN 에너지사용량 B
     ON (A. 설비ID = B. 설비ID)
     GROUP BY CUBE (A. 설비ID, B. 에너지코드)
     ORDER BY A. 설비ID, B. 에너지코드;

   - SELECT A. 설비ID, B. 에너지코드, SUM(B. 사용량) AS 사용량합계
     FROM 설비 A INNER JOIN 에너지사용량 B
     ON (A. 설비ID = B. 설비ID)
     GROUP BY GROUPING SETS( (A. 설비ID), (B. 에너지코드),(A. 설비ID, B. 에너지코드), ())
     ORDER BY A. 설비ID, B. 에너지코드; 
5.  테이블과 같은 결과
6.  3
7.  2,3,6
8.  X
9.  002, 003,  006
10.  비용기반 옵티마이저, COST BASED OPTIMIZER, CBO
11.  3, 4, 2 
12.  3
13.  2
14.  2, 4
15.  1, 2, 3
16.  3
17.  4
18.  1